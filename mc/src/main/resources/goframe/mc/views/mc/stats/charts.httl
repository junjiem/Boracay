${extends("/goframe/function_layout.httl")}
<!--#macro(head)-->
<link rel="stylesheet" href="${basePath}/s/css/udsp.css"/>
<link rel="stylesheet" href="${basePath}/s/css/font-awesome.css"/>
<!--#end-->

<!--#macro(content)-->
<style type="text/css">
    #btnQuery > span {
        width: 100px;
    }
</style>

<div class="nui-toolbar">
    <div id="form1" class="panel-toolbar">
        <table style="width:100%">
            <tr>
                <td style="white-space:nowrap;">
                    <B>图表</B>
                    <span style="display:inline-block;width:25px;"></span>
                    <a checkOnClick="true" groupName="interval" class="mini-button"
                       plain="true" oncheckedchanged="onCheckedChanged2">
                        <span id="intervalStr">30分钟</span> 在 <span id="datetimeStr">2017-03-23 12:23</span> 之前</a>
                    </a>
                </td>
                <td style="text-align: right;">
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="30" oncheckedchanged="onCheckedChanged" checked="true">30分钟</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="60" oncheckedchanged="onCheckedChanged">1小时</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="120" oncheckedchanged="onCheckedChanged">2小时</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="360" oncheckedchanged="onCheckedChanged">6小时</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="720" oncheckedchanged="onCheckedChanged">12小时</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="1440" oncheckedchanged="onCheckedChanged">1天</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="10080" oncheckedchanged="onCheckedChanged">7天</a>
                    <a checkOnClick="true" groupName="interval" class="nui-button"
                       plain="true" value="43200" oncheckedchanged="onCheckedChanged">30天</a>
                </td>
            </tr>
        </table>
    </div>

    <div class="nui-fit" style="height: auto;">
        <table style="width:100%" cellpadding="10px,5px,10px,5px">
            <tr>
                <td style="height:300px;width:49%;">
                    <div id="chart1" style="height:100%;width:100%;"></div>
                </td>
                <td style="height:300px;width:49%;">
                    <div id="chart2" style="height:100%;width:100%;"></div>
                </td>
            </tr>
            <tr>
                <td style="height:300px;width:49%;">
                    <div id="chart3" style="height:100%;width:100%;"></div>
                </td>
                <td style="height:300px;width:49%;">
                    <div id="chart4" style="height:100%;width:100%;"></div>
                </td>
            </tr>
            <tr>
                <td style="height:300px;width:49%;">
                    <div id="chart5" style="height:100%;width:100%;"></div>
                </td>
                <td style="height:300px;width:49%;">
                    <div id="chart6" style="height:100%;width:100%;"></div>
                </td>
            </tr>
            <tr>
                <td style="height:300px;width:49%;">
                    <div id="chart7" style="height:100%;width:100%;"></div>
                </td>
                <td style="height:300px;width:49%;">
                    <div id="chart8" style="height:100%;width:100%;"></div>
                </td>
            </tr>
        </table>

    </div>

</div>

<script type="text/javascript">
    var echarts;

    /**
     * 按需加载资源文件
     */
    require(['echarts', 'jquery', 'nui'], function (ec, $, nui) {
        nui.parse();
        echarts = ec;
    });

    /**
     * 触发图表
     */
    function optionCharts(datetime, interval) {
        var form1 = new nui.Form("#form1");
        form1.loading("正在加载中,请稍等...");

        // 1、时间维度-分结果状态的消费统计
        optionChart1(datetime, interval);
        // 2、时间维度-分应用类型的消费统计
        optionChart2(datetime, interval);
        // 3、用户维度-分结果状态的消费统计
        optionChart3(datetime, interval);
        // 4、用户维度-分应用类型的消费统计
        optionChart4(datetime, interval);
        // 5、服务维度-分结果状态的消费统计
        optionChart5(datetime, interval);
        // 6、服务维度-分应用类型的消费统计
        optionChart6(datetime, interval);
        // 7、服务维度-同步请求的耗时统计
        optionChart7(datetime, interval);
        // 8、服务维度-异步请求的耗时统计
        optionChart8(datetime, interval);

        setTimeout(function () {
            form1.unmask();
        }, 1000);
    }

    /**
     * 时间间隔点击时触发
     * @param e
     */
    function onCheckedChanged(e) {
        var btn = e.sender;
        var checked = btn.getChecked();
        if (checked) {
            btn.checked = false;
            var interval = btn.getValue();
            var text = btn.getText();
            var datetime = nui.formatDate(new Date(getNowTime()), "yyyy-MM-dd HH:mm");
            $("#intervalStr").text(text);
            $("#datetimeStr").text(datetime);
            optionCharts(datetime, interval);
        }
    }

    /**
     * 自定义时间间隔点击时触发
     */
    function onCheckedChanged2(e) {
        var btn = e.sender;
        var checked = btn.getChecked();
        if (checked) {
            btn.checked = false;
            nui.open({
                url: "${basePath}/goframe/p/mc.stats.interval",
                title: "自定义时间间隔",
                width: 350,
                height: 300,
                onload: function () {
                },
                ondestroy: function (action) {
                    if (action == "success") {
                        var data = this.getIFrameEl().contentWindow.GetData();
                        //console.warn(data);
                        var interval = (new Date(data.timeEnd) - new Date(data.timeStart)) / 60000;
                        var text = "30分钟";
                        if (interval < 60) {
                            text = interval + "分钟";
                        } else if (interval < 1440) {
                            text = (interval / 60).toFixed(2) + "小时";
                        } else {
                            text = (interval / 1440).toFixed(2) + "天";
                        }
                        var datetime = data.timeEnd;
                        $("#intervalStr").text(text);
                        $("#datetimeStr").text(datetime);
                        optionCharts(datetime, interval);
                    }
                }
            });
        }
    }

    /**
     * 时间维度-分结果状态的消费统计
     */
    function optionChart1(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart1?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var successList = data["SUCCESS"];
                var defeatList = data["DEFEAT"];
                var option = {
                    title: {
                        text: '时间维度-分结果状态的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['成功状态', '失败状态']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    dataZoom: {
                        show: true,
                        realtime: true,
                        start: 0,
                        end: 100
                    },
                    xAxis: [
                        {
                            //name: name,
                            type: 'category',
                            boundaryGap: false,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '成功状态',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: successList
                        },
                        {
                            name: '失败状态',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: defeatList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart1'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 时间维度-分应用类型的消费统计
     */
    function optionChart2(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart2?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var iqList = data["IQ"];
                var olqList = data["OLQ"];
                var mmList = data["MM"];
                var rtsProducerList = data["RTS_PRODUCER"];
                var rtsConsumerList = data["RTS_CONSUMER"];
                var olqAppList = data["OLQ_APP"];
                var imList = data["IM"];
                var iqDslList = data["IQ_DSL"];
                var option = {
                    title: {
                        text: '时间维度-分应用类型的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['交互查询', '联机查询', '模型管理', '实时流-生产者', '实时流-消费者', '联机查询应用', '交互建模', '交互查询DSL']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    dataZoom: {
                        show: true,
                        realtime: true,
                        start: 0,
                        end: 100
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: false,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ]
                    ,
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '交互查询',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: iqList
                        },
                        {
                            name: '联机查询',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: olqList
                        },
                        {
                            name: '模型管理',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: mmList
                        },
                        {
                            name: '实时流-生产者',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: rtsProducerList
                        },
                        {
                            name: '实时流-消费者',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: rtsConsumerList
                        },
                        {
                            name: '联机查询应用',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: olqAppList
                        },
                        {
                            name: '交互建模',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: imList
                        },
                        {
                            name: '交互查询DSL',
                            type: 'line',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: iqDslList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart2'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 用户维度-分结果状态的消费统计
     */
    function optionChart3(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart3?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var successList = data["SUCCESS"];
                var defeatList = data["DEFEAT"];
                var option = {
                    title: {
                        text: '用户维度-分结果状态的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['成功状态', '失败状态']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: true,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '成功状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: successList
                        },
                        {
                            name: '失败状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: defeatList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart3'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 用户维度-分应用类型的消费统计
     */
    function optionChart4(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart4?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var iqList = data["IQ"];
                var olqList = data["OLQ"];
                var mmList = data["MM"];
                var rtsProducerList = data["RTS_PRODUCER"];
                var rtsConsumerList = data["RTS_CONSUMER"];
                var olqAppList = data["OLQ_APP"];
                var imList = data["IM"];
                var iqDslList = data["IQ_DSL"];
                var option = {
                    title: {
                        text: '用户维度-分应用类型的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['交互查询', '联机查询', '模型管理', '实时流-生产者', '实时流-消费者', '联机查询应用', '交互建模', '交互查询DSL']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: true,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '交互查询',
                            type: 'bar',
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: iqList
                        },
                        {
                            name: '联机查询',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: olqList
                        },
                        {
                            name: '模型管理',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: mmList
                        },
                        {
                            name: '实时流-生产者',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: rtsProducerList
                        },
                        {
                            name: '实时流-消费者',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: rtsConsumerList
                        },
                        {
                            name: '联机查询应用',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: olqAppList
                        },
                        {
                            name: '交互建模',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: imList
                        },
                        {
                            name: '交互查询DSL',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: iqDslList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart4'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 服务名维度-分结果状态的消费统计
     */
    function optionChart5(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart5?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var successList = data["SUCCESS"];
                var defeatList = data["DEFEAT"];
                var option = {
                    title: {
                        text: '服务名维度-分结果状态的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['成功状态', '失败状态']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: true,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '成功状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: successList
                        },
                        {
                            name: '失败状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: defeatList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart5'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 应用类型维度-分结果状态的消费统计
     */
    function optionChart6(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart6?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var successList = data["SUCCESS"];
                var defeatList = data["DEFEAT"];
                var option = {
                    title: {
                        text: '应用类型维度-分结果状态的消费统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['成功状态', '失败状态']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: true,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（次）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '成功状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: successList
                        },
                        {
                            name: '失败状态',
                            type: 'bar',
                            barMaxWidth: 20,
                            stack: '总量',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: defeatList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart6'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 服务名维度-同步请求的耗时统计
     */
    function optionChart7(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart7?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var maxList = data["MAX"];
                var avgList = data["AVG"];
                var minList = data["MIN"];
                var option = {
                    title: {
                        text: '时间维度-同步请求的耗时统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['最大耗时', '平均耗时', '最小耗时']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    dataZoom: {
                        show: true,
                        realtime: true,
                        start: 0,
                        end: 100
                    },
                    xAxis: [
                        {
                            //name: name,
                            type: 'category',
                            boundaryGap: false,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（秒）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '最大耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: maxList
                        },
                        {
                            name: '平均耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: avgList
                        },
                        {
                            name: '最小耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: minList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart7'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 服务名维度-异步请求的耗时统计
     */
    function optionChart8(datetime, interval) {
        $.ajax({
            url: "${basePath}/mc/stats/charts/chart8?datetime=" + datetime + "&interval=" + interval,
            type: 'POST',
            data: {},
            async: true,
            cache: true,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                var data = result.data;
                var xList = data["X"];
                var maxList = data["MAX"];
                var avgList = data["AVG"];
                var minList = data["MIN"];
                var option = {
                    title: {
                        text: '时间维度-异步请求的耗时统计'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        x: 'left',
                        y: 'center',
                        orient: 'vertical',
                        data: ['最大耗时', '平均耗时', '最小耗时']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            dataView: {show: true, readOnly: false},
                            magicType: {show: true, type: ['line', 'bar']},
                            restore: {show: true},
                            saveAsImage: {show: true}
                        }
                    },
                    grid: {
                        x: '25%',
                        y: '20%',
                        x2: '5%',
                        y2: '20%'
                    },
                    dataZoom: {
                        show: true,
                        realtime: true,
                        start: 0,
                        end: 100
                    },
                    xAxis: [
                        {
                            //name: name,
                            type: 'category',
                            boundaryGap: false,
                            axisLine: {onZero: false},
                            data: xList
                        }
                    ],
                    yAxis: [
                        {
                            name: '消费数（秒）',
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '最大耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: maxList
                        },
                        {
                            name: '平均耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: avgList
                        },
                        {
                            name: '最小耗时',
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    areaStyle: {
                                        type: 'default'
                                    }
                                }
                            },
                            data: minList
                        }
                    ]
                };
                //console.log(option);
                setTimeout(function () {
                    var chart = echarts.init(document.getElementById('chart8'));
                    chart.clear();
                    chart.setOption(option, true);
                }, 500);
            }
        });
    }

    /**
     * 获取服务器当前日期时间
     */
    function getNowTime() {
        var nowtime = nui.formatDate(new Date(), "yyyy-MM-dd HH:mm:ss");
        $.ajax({
            url: "${basePath}/mc/stats/charts/nowtime",
            type: 'POST',
            data: {},
            async: false,
            cache: false,
            contentType: 'application/json',
            success: function (result) {
                //console.log(result);
                if (result.status == false) {
                    nui.alert(result.message, "提示");
                    return;
                }
                nowtime = result.data;
            }
        });
        //console.log(nowtime);
        return nowtime;
    }

    function getNum(map, key) {
        var num = map[key];
        if (!num) num = 0;
        return num;
    }

    function getVal(map, key, num) {
        var val = map[key];
        if (val)
            val += num;
        else
            val = num;
        return val;
    }
</script>
<!--#end-->