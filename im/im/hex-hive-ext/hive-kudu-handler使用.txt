#########################################################################
#					依赖jar包
#########################################################################
async-1.4.1.jar
interface-annotations-1.1.0.jar
kudu-client-1.1.0.jar
slf4j-api-1.7.12.jar
slf4j-simple-1.7.12.jar

#########################################################################
#					测试Hive创建表（支持）
#########################################################################

beeline -u jdbc:hive2://localhost:10000 -n hive -p 111111

set hive.cli.print.header=true;

-- 创建一个Kudu的内表
CREATE TABLE kudu_handler_test1 (
key INT,
value STRING
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
--'kudu.table.name' = 'kudu_handler_test1', -- kudu表名
'kudu.master.addresses' = 'node1:7051',
'kudu.key.columns' = 'key' -- 主键集，多个组件用逗号隔开
);

-- 创建一个Kudu的内表
CREATE TABLE kudu_handler_test2 (
key INT,
key2 STRING,
value STRING
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
'kudu.table.name' = 'kudu_test2', -- kudu表名
'kudu.master.addresses' = 'node1:7051',
'kudu.key.columns' = 'key,key2' -- 主键集，多个组件用逗号隔开
);

-- 创建一个Kudu的内表
CREATE TABLE kudu_handler_test3 (
key INT,
value STRING
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
--'kudu.table.name' = 'kudu_handler_test3', -- kudu表名
'kudu.master.addresses' = 'node1:7051',
'kudu.key.columns' = 'key', -- 主键集，多个组件用逗号隔开
'kudu.hash.partitions.buckets'='10' -- 预哈希分区数
);
 
describe formatted kudu_handler_test1;
describe formatted kudu_handler_test2;
describe formatted kudu_handler_test3;

-- 创建一个Kudu的外表
CREATE EXTERNAL TABLE ext_kudu_handler_test1 (
key INT,
value STRING
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
'kudu.table.name' = 'kudu_handler_test1',
'kudu.master.addresses' = 'node1:7051'
);

-- 创建一个Kudu的外表
CREATE EXTERNAL TABLE ext_kudu_handler_test2 (
name STRING
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
'kudu.table.name' = 'kudu_test2',
'kudu.master.addresses' = 'node1:7051',
'kudu.projected.column.names' = 'value'
);

-- 创建一个Kudu的外表
CREATE EXTERNAL TABLE ext_kudu_handler_test3 (
id INT
)
stored by 'com.hex.hive.kudu.KuduStorageHandler'
TBLPROPERTIES(
'kudu.table.name' = 'kudu_test2',
'kudu.master.addresses' = 'node1:7051',
'kudu.projected.column.names' = 'key'
);

describe formatted ext_kudu_handler_test1;
describe formatted ext_kudu_handler_test2;
describe formatted ext_kudu_handler_test3;

#########################################################################
#					测试Hive查询数据（支持）
#########################################################################

select * from kudu_handler_test1;

select count(*) from kudu_handler_test1;

select key from kudu_handler_test1 where value = 'a';

select value, count(*) from kudu_handler_test1 group by value;

#########################################################################
#					测试Hive插入数据（支持）
#########################################################################

insert into kudu_handler_test1 values (1, 'a'), (2, 'b'), (3, 'a');

insert into kudu_handler_test2 select * from kudu_handler_test1;

insert overwrite kudu_handler_test1 values (11, 'a'), (12, 'b'), (13, 'a'); -- 不行，overwrite后必须加table。

insert overwrite table kudu_handler_test1 values (11, 'a'), (12, 'b'), (13, 'a');

insert overwrite table kudu_handler_test1 select * from kudu_handler_test2;

insert into table ext_kudu_handler_test1 select * from kudu_handler_test2;

insert into table ext_kudu_handler_test2 select name from kudu_handler_test1;

insert into table ext_kudu_handler_test3 select id from kudu_handler_test1;

#########################################################################
#					测试Hive更新数据（不支持）
#########################################################################

update kudu_handler_test1 set value='a1' where key=1;

#########################################################################
#					测试Hive删除数据（不支持）
#########################################################################

delete kudu_handler_test1 where key=1;

注：
1、OVERWRITE和INTO效果相同只是增量添加；
3、只支持create、select和insert操作；
